{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/seo/seo.tsx","webpack:///./src/components/seo/index.ts","webpack:///./src/components/footer/footer.tsx","webpack:///./src/components/header/header.tsx","webpack:///./src/components/layout/layout.tsx","webpack:///./src/components/layout/index.ts"],"names":["NotFoundPage","Fragment","title","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","BoldText","styled","Text","Footer","as","my","justifyContent","alignItems","Date","getFullYear","href","sx","color","textDecoration","StyledLink","Link","scrollOptions","smooth","spy","hashSpy","duration","offset","activeClass","onClick","setTimeout","animateScroll","scrollMore","Header","useColorMode","mode","setMode","handleChangeMode","useCallback","useEffect","scrollSpy","update","px","py","width","position","backgroundColor","zIndex","borderBottomWidth","borderBottomStyle","borderBottomColor","to","fontWeight","mx","variant","ml","GlobalStyles","useThemeUI","theme","colors","primary","text","styles","css","Layout","children"],"mappings":"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","file":"component---src-pages-404-tsx-ec19a160fe60702f4883.js","sourcesContent":["import React from \"react\";\n\nimport Layout from \"@components/layout\";\nimport SEO from \"@components/seo\";\n\nconst NotFoundPage: React.FunctionComponent = () => (\n  <Layout>\n    <React.Fragment>\n      <SEO title=\"404: Not found\" />\n      <h1>NOT FOUND</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </React.Fragment>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\n\ninterface SEOProps {\n  description?: string;\n  lang?: \"en\";\n  meta?: {\n    name: string;\n    content: string;\n  }[];\n  title?: string;\n}\n\nconst SEO: React.FunctionComponent<SEOProps> = ({\n  description,\n  lang,\n  meta,\n  title,\n}: SEOProps) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription: string = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title || site.siteMetadata.title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title || site.siteMetadata.title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author as string,\n        },\n        {\n          name: `twitter:title`,\n          content: title || site.siteMetadata.title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta!)}\n    />\n  );\n};\n\nSEO.defaultProps = {\n  lang: \"en\",\n  meta: [],\n  description: ``,\n};\n\nexport default SEO;\n","export { default } from \"./seo\";\n","import React from \"react\";\nimport { Flex, Link, Text } from \"rebass\";\n\nimport styled from \"@emotion/styled\";\n\nconst BoldText = styled(Text)`\n  font-weight: bold;\n`;\n\nconst Footer: React.FunctionComponent = () => {\n  return (\n    <Flex as=\"footer\" my={4} justifyContent=\"center\" alignItems=\"center\">\n      <BoldText>&copy; {new Date().getFullYear()} | Built with &nbsp;</BoldText>\n      <Link\n        href=\"https://www.gatsbyjs.org\"\n        sx={{\n          color: \"primary\",\n          textDecoration: \"none\",\n        }}\n      >\n        <BoldText>Gatsby</BoldText>\n      </Link>\n      <BoldText>&nbsp; by Andy Tan</BoldText>\n    </Flex>\n  );\n};\n\nexport default Footer;\n","import React, { useCallback, useEffect } from \"react\";\nimport { animateScroll, Link, scrollSpy } from \"react-scroll\";\nimport { Box, Button, Flex, Text } from \"rebass\";\nimport { useColorMode } from \"theme-ui\";\n\nimport styled from \"@emotion/styled\";\n\nconst StyledLink = styled(Link)`\n  margin: 0 1.2rem;\n  padding: 0.5rem 0;\n  font-size: 1.2rem;\n  cursor: pointer;\n`;\n\nconst scrollOptions = {\n  smooth: \"easeInOutQuart\",\n  spy: true,\n  hashSpy: true,\n  duration: 700,\n  offset: -75, // offset height of navbar\n  activeClass: \"activeLink\",\n\n  // a hack around bug on react-scroll\n  // Clicking on link doesn't scroll fully into container.\n  // This handler is to scroll some more pixels to\n  // get the active class being activated\n  onClick: () => {\n    setTimeout(() => {\n      animateScroll.scrollMore(10);\n    }, 600);\n  },\n};\n\nconst Header: React.FunctionComponent = () => {\n  const [mode, setMode] = useColorMode();\n\n  const handleChangeMode = useCallback(() => {\n    const next = mode === \"dark\" ? \"light\" : \"dark\";\n    setMode(next);\n  }, [mode, setMode]);\n\n  // update border bottom of logo on page load\n  // delay execution to make the update successfully\n  useEffect(() => {\n    setTimeout(() => {\n      scrollSpy.update();\n    }, 100);\n  }, []);\n\n  return (\n    // TODO: responsive nav\n    <Flex\n      px={4}\n      py={3}\n      width={1}\n      alignItems=\"center\"\n      sx={{\n        position: \"fixed\",\n        backgroundColor: \"background\",\n        zIndex: 2,\n\n        \"& .activeLink\": {\n          borderBottomWidth: \"5px\",\n          borderBottomStyle: \"solid\",\n          borderBottomColor: \"primary\",\n        },\n      }}\n    >\n      <StyledLink to=\"landing\" {...scrollOptions}>\n        <Text fontWeight=\"bold\" as=\"h2\">\n          Andy Tan\n        </Text>\n      </StyledLink>\n      <Box mx=\"auto\" />\n      <StyledLink to=\"about-me\" {...scrollOptions}>\n        About Me\n      </StyledLink>\n      <StyledLink to=\"skills\" {...scrollOptions}>\n        Skills\n      </StyledLink>\n      <StyledLink to=\"projects\" {...scrollOptions}>\n        Projects\n      </StyledLink>\n      <Button variant=\"outline\" ml={3} onClick={handleChangeMode}>\n        {mode}\n      </Button>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import \"normalize.css\";\n\nimport React from \"react\";\nimport { Box } from \"rebass\";\nimport { ThemeProvider, useThemeUI } from \"theme-ui\";\n\nimport Footer from \"@components/footer\";\nimport Header from \"@components/header\";\nimport SEO from \"@components/seo\";\nimport { css, Global } from \"@emotion/core\";\nimport theme from \"@src/gatsby-plugin-theme-ui\";\n\ninterface LayoutProps {\n  children: React.ReactChildren | React.ReactElement;\n}\n\nconst GlobalStyles = () => {\n  const {\n    theme: {\n      colors: { primary, text },\n    },\n  } = useThemeUI();\n\n  return (\n    <Global\n      styles={css`\n        body {\n          &,\n          & * {\n            &::-webkit-scrollbar {\n              width: 10px;\n            }\n\n            &::-webkit-scrollbar-thumb {\n              background: ${primary};\n            }\n\n            &::-webkit-scrollbar-track {\n              background-color: ${text};\n            }\n          }\n        }\n      `}\n    />\n  );\n};\n\nconst Layout: React.FunctionComponent<LayoutProps> = ({\n  children,\n}: LayoutProps) => {\n  return (\n    <>\n      <Header />\n      <ThemeProvider theme={theme}>\n        <Box as=\"main\" width={1}>\n          <SEO />\n          <GlobalStyles />\n          {children}\n        </Box>\n      </ThemeProvider>\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n","export { default } from \"./layout\";\n"],"sourceRoot":""}