{"version":3,"sources":["webpack:///./src/components/tooltip/tooltip.tsx","webpack:///./src/components/link/icon-link/icon-link.tsx","webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo/seo.tsx","webpack:///./src/components/seo/index.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/footer/footer.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header/header.tsx","webpack:///./src/components/layout/layout.tsx","webpack:///./src/components/layout/index.ts"],"names":["StyledTooltip","styled","div","props","tooltipTitle","highlight","Tooltip","children","theme","useThemeUI","highlightBg","colors","StyledIconLink","Link","color","hoverColor","IconLink","url","tooltip","href","target","rel","text","secondary","IndexPage","title","height","flexDirection","justifyContent","alignItems","as","mt","aria-label","size","m","module","exports","require","default","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","ProdPageRenderer","location","pageResources","React","createElement","InternalPageRenderer","json","BoldText","Text","Footer","Date","getFullYear","sx","textDecoration","loader","enqueue","createContext","StyledLink","Header","useColorMode","mode","setMode","linkColor","handleChangeMode","useCallback","px","py","p","fontWeight","mx","GatsbyLink","variant","to","ml","onClick","Layout","width"],"mappings":"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","file":"component---src-pages-index-tsx-0f1d355063287cb37c6a.js","sourcesContent":["import React from \"react\";\nimport { useThemeUI } from \"theme-ui\";\n\nimport styled from \"@emotion/styled\";\n\ninterface TooltipProps {\n  highlight?: string;\n  tooltipTitle: string;\n  children: JSX.Element;\n}\n\ntype StyledTooltipProps = Required<\n  Pick<TooltipProps, \"highlight\" | \"tooltipTitle\">\n>;\n\nconst StyledTooltip = styled.div<StyledTooltipProps>`\n  position: relative;\n\n  &::after {\n    content: '${props => props.tooltipTitle}';\n    min-width: 4rem;\n    padding: .25rem .5rem;\n    position: absolute;\n    top: 120%;\n    left: 10%;\n    z-index: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: .9rem;\n    background-color: ${props => props.highlight};\n    opacity: 0;\n    transition: 200ms ease-in-out;\n  }\n\n  &:hover::after {\n    opacity: 1;\n    transform: translateY(5px);\n  }\n`;\n\nconst Tooltip: React.FunctionComponent<TooltipProps> = (\n  props: TooltipProps\n) => {\n  const { highlight, tooltipTitle, children } = props;\n  const { theme } = useThemeUI();\n  const highlightBg: string = highlight || theme.colors.highlight;\n\n  return (\n    <StyledTooltip tooltipTitle={tooltipTitle} highlight={highlightBg}>\n      {children}\n    </StyledTooltip>\n  );\n};\n\nexport default Tooltip;\n","import React from \"react\";\nimport { Link, LinkProps } from \"rebass\";\nimport { useThemeUI } from \"theme-ui\";\n\nimport styled from \"@emotion/styled\";\nimport Tooltip from \"@src/components/tooltip\";\n\ninterface IconLinkProps extends LinkProps {\n  color?: string;\n  hoverColor?: string;\n  url: string;\n  tooltip: string;\n  children: JSX.Element;\n}\n\ntype StyledIconLinkProps = Required<\n  Pick<IconLinkProps, \"color\" | \"hoverColor\">\n>;\n\nconst StyledIconLink = styled(Link)<StyledIconLinkProps>`\n  transition: color 0.5s;\n  color: ${props => props.color};\n  text-decoration: none;\n  cursor: pointer;\n  margin-left: 1rem;\n\n  &:hover {\n    color: ${props => props.hoverColor};\n  }\n`;\n\nconst IconLink = (props: IconLinkProps) => {\n  const { color, hoverColor, url, tooltip, children } = props;\n  const { theme } = useThemeUI();\n\n  return (\n    <Tooltip tooltipTitle={tooltip}>\n      <StyledIconLink\n        {...props}\n        href={url}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        color={color || theme.colors.text}\n        hoverColor={hoverColor || theme.colors.secondary}\n      >\n        {children}\n      </StyledIconLink>\n    </Tooltip>\n  );\n};\n\nexport default IconLink;\n","import React from \"react\";\nimport { FaFacebook, FaGithub, FaMailBulk, FaTwitter } from \"react-icons/fa\";\nimport { Flex, Text } from \"rebass\";\n\nimport Layout from \"@components/layout\";\nimport IconLink from \"@components/link/icon-link\";\nimport SEO from \"@components/seo\";\n\nconst IndexPage: React.FunctionComponent = () => (\n  <Layout>\n    <>\n      <SEO title=\"Home\" />\n      <Flex\n        height=\"80vh\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Text as=\"h1\">Hello, I&apos;m Andy, a web developer</Text>\n        <Flex mt={5} alignItems=\"center\" justifyContent=\"space-around\">\n          <IconLink\n            tooltip=\"facebook\"\n            url=\"https://facebook.com/andytan\"\n            aria-label=\"facebook\"\n          >\n            <FaFacebook size={48} />\n          </IconLink>\n          <IconLink\n            tooltip=\"github\"\n            url=\"https://github.com/andytan0727\"\n            aria-label=\"github\"\n          >\n            <FaGithub size={48} />\n          </IconLink>\n          <IconLink tooltip=\"twitter\" url=\"https://twitter.com/andy_x_tan07\">\n            <FaTwitter size={48} />\n          </IconLink>\n          <IconLink tooltip=\"email me\" url=\"https://gmail.com\">\n            <FaMailBulk size={48} />\n          </IconLink>\n        </Flex>\n      </Flex>\n    </>\n  </Layout>\n);\n\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\n\ninterface SEOProps {\n  description?: string;\n  lang?: \"en\";\n  meta?: {\n    name: string;\n    content: string;\n  }[];\n  title?: string;\n}\n\nconst SEO: React.FunctionComponent<SEOProps> = ({\n  description,\n  lang,\n  meta,\n  title,\n}: SEOProps) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription: string = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title || site.siteMetadata.title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title || site.siteMetadata.title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author as string,\n        },\n        {\n          name: `twitter:title`,\n          content: title || site.siteMetadata.title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta!)}\n    />\n  );\n};\n\nSEO.defaultProps = {\n  lang: \"en\",\n  meta: [],\n  description: ``,\n};\n\nexport default SEO;\n","export { default } from \"./seo\";\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Flex, Link, Text } from \"rebass\";\n\nimport styled from \"@emotion/styled\";\n\nconst BoldText = styled(Text)`\n  font-weight: bold;\n`;\n\nconst Footer: React.FunctionComponent = () => {\n  return (\n    <Flex as=\"footer\" justifyContent=\"center\" alignItems=\"center\">\n      <BoldText>&copy; {new Date().getFullYear()} | Built with &nbsp;</BoldText>\n      <Link\n        href=\"https://www.gatsbyjs.org\"\n        sx={{\n          color: \"primary\",\n          textDecoration: \"none\",\n        }}\n      >\n        <BoldText>Gatsby</BoldText>\n      </Link>\n      <BoldText>&nbsp; by Andy Tan</BoldText>\n    </Flex>\n  );\n};\n\nexport default Footer;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link as GatsbyLink } from \"gatsby\";\nimport React, { useCallback } from \"react\";\nimport { Box, Button, Flex, Link, Text } from \"rebass\";\nimport { useColorMode, useThemeUI } from \"theme-ui\";\n\nimport styled from \"@emotion/styled\";\n\nconst StyledLink = styled(Link)`\n  color: ${props => props.color};\n  text-decoration: none;\n  margin: 0.5rem 1.2rem;\n`;\n\nconst Header: React.FunctionComponent = () => {\n  const { theme } = useThemeUI();\n  const [mode, setMode] = useColorMode();\n  const linkColor = theme.colors.text;\n\n  const handleChangeMode = useCallback(() => {\n    const next = mode === \"dark\" ? \"light\" : \"dark\";\n    setMode(next);\n  }, [mode, setMode]);\n\n  return (\n    // TODO: responsive nav\n    <Flex px={4} py={3} alignItems=\"center\">\n      <Text p={2} fontWeight=\"bold\" as=\"h2\">\n        Andy Tan\n      </Text>\n      <Box mx=\"auto\" />\n      <StyledLink\n        as={GatsbyLink}\n        color={linkColor}\n        variant=\"nav\"\n        {...{ to: \"/about\" }}\n      >\n        About\n      </StyledLink>\n      <StyledLink\n        as={GatsbyLink}\n        color={linkColor}\n        variant=\"nav\"\n        {...{ to: \"/skills\" }}\n      >\n        Skills\n      </StyledLink>\n      <StyledLink\n        as={GatsbyLink}\n        color={linkColor}\n        variant=\"nav\"\n        {...{ to: \"/projects\" }}\n      >\n        Projects\n      </StyledLink>\n      <Button variant=\"outline\" ml={3} onClick={handleChangeMode}>\n        {mode}\n      </Button>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import \"normalize.css\";\n\nimport React from \"react\";\nimport { Box } from \"rebass\";\nimport { ThemeProvider } from \"theme-ui\";\n\nimport Footer from \"@components/footer\";\nimport Header from \"@components/header\";\nimport SEO from \"@components/seo\";\nimport theme from \"@src/gatsby-plugin-theme-ui\";\n\ninterface LayoutProps {\n  children: React.ReactChildren | React.ReactElement;\n}\n\nconst Layout: React.FunctionComponent<LayoutProps> = ({\n  children,\n}: LayoutProps) => {\n  return (\n    <>\n      <Header />\n      <ThemeProvider theme={theme}>\n        <Box as=\"main\" mt={2} px={4} width={1} height=\"100%\">\n          <SEO />\n          {children}\n        </Box>\n      </ThemeProvider>\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n","export { default } from \"./layout\";\n"],"sourceRoot":""}